var tipuesearch = {"pages": [{'title': 'About', 'text': '組員: \n group:1 \n Repository:\xa0 40723201 \xa0 | Site: \xa0 40723201 Repository:\xa0 40723206 \xa0 | Site: \xa0 40723206 ---- group:2 \n Repository:\xa0 40723222 \xa0 | Site: \xa0 40723222 Repository:\xa0 40723244 \xa0 | Site: \xa0 40723244 ---- group:3 \n Repository:\xa0 40723203 \xa0 | Site: \xa0 40723203 Repository:\xa0 40723207 \xa0 | Site: \xa0 40723207 ---- group:4 \n Repository:\xa0 40723250 \xa0 | Site: \xa0 40723250 Repository:\xa0 40623251 \xa0 | Site: \xa0 40623251 \n 倉儲: https://github.com/s40723207/cdbw12-2 \n', 'tags': '', 'url': 'About.html'}, {'title': '40723201', 'text': '', 'tags': '', 'url': '40723201.html'}, {'title': '四輪車外型設置', 'text': "四輪車的基本外型設置 \n \n 根據主題 0 和主題 1 的素材，您能否具體描述機械設計團隊，為了完成作業四輪機器人需要做些 什麼? \xa0 \n \xa0 四輪車馬達設定及鍵盤控制加速及轉彎 \xa0 \n \xa0 利用Vrep 實施模擬 \xa0 \n \n \n \xa0 步驟： \n \n 先add \xa0 ➜\xa0 primitive shape\xa0 ➜\xa0 導入車體形狀 ， 且 導入後左方工作列因該會呈現下方的樣態 \xa0 \n \n \xa0 \n \n 調整位置 \xa0 \n \n \xa0 \n \n 調整車體大小 ， 可以依照下方圖示更改車體大小 \xa0 \n \n \xa0 \n \n 馬達調整功率 \xa0 \n \n 藉由勾選 motor properties以啟動馬達，並可以藉由調整轉動速度和力矩達到所想要馬達轉動之效果，底下的lock motor when target velocity is zero 則可以使馬達速度為零時鎖定住馬達 \xa0 \n \xa0 \n \n 檢查碰撞 \xa0 \n \n 物件的動力學設定也必須要設定好，如下方所示物體的碰撞和物體的動態都必須打開，才能使剛剛設定好的馬達進行對輪胎的帶動 \xa0 \n \xa0 \n \n 貼上撰寫好的鍵盤控制轉彎程式 \n \n -- This script is threaded! It is a very simple example of how Ackermann steering can be handled. -- Normally, one would use a non-threaded script for that \xa0 threadFunction=function() \xa0\xa0\xa0\xa0while simGetSimulationState()~=sim_simulation_advancing_abouttostop do \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0-- Read the keyboard messages (make sure the focus is on the main window, scene view): \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0message,auxiliaryData=simGetSimulatorMessage() \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0while message~=-1 do \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if (message==sim_message_keypress) then \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if (auxiliaryData[1]==2007) then \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0-- up key \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0desiredWheelRotSpeed=desiredWheelRotSpeed+wheelRotSpeedDx \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0end \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if (auxiliaryData[1]==2008) then \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0-- down key \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0desiredWheelRotSpeed=desiredWheelRotSpeed-wheelRotSpeedDx \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0end \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if (auxiliaryData[1]==2009) then \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0-- left key \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0desiredSteeringAngle=desiredSteeringAngle+steeringAngleDx \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if (desiredSteeringAngle>45*math.pi/180) then \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0desiredSteeringAngle=45*math.pi/180 \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0end \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0end \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if (auxiliaryData[1]==2010) then \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0-- right key \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0desiredSteeringAngle=desiredSteeringAngle-steeringAngleDx \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if (desiredSteeringAngle<-45*math.pi/180) then \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0desiredSteeringAngle=-45*math.pi/180 \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0end \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0end \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0end \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0message,auxiliaryData=simGetSimulatorMessage() \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0end \xa0 \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0-- We handle the front left and right wheel steerings (Ackermann steering): \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0steeringAngleLeft=math.atan(l/(-d+l/math.tan(desiredSteeringAngle))) \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0steeringAngleRight=math.atan(l/(d+l/math.tan(desiredSteeringAngle))) \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0simSetJointTargetPosition(steeringLeft,steeringAngleLeft) \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0simSetJointTargetPosition(steeringRight,steeringAngleRight) \xa0 \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0-- We take care of setting the desired wheel rotation speed: \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0simSetJointTargetVelocity(motorLeft,desiredWheelRotSpeed) \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0simSetJointTargetVelocity(motorRight,desiredWheelRotSpeed) \xa0 \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0-- Since this script is threaded, don't waste time here: \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0simSwitchThread() -- Resume the script at next simulation loop start \xa0\xa0\xa0\xa0end end \xa0 -- Put some initialization code here: -- Retrieving of some handles and setting of some initial values: steeringLeft=simGetObjectHandle('Steer_left_joint') steeringRight=simGetObjectHandle('Steer_right_joint') motorLeft=simGetObjectHandle('Front_left_joint') motorRight=simGetObjectHandle('Front_right_joint') desiredSteeringAngle=0 desiredWheelRotSpeed=0 steeringAngleDx=2*math.pi/180 wheelRotSpeedDx=20*math.pi/180 d=0.755 -- 2*d=distance between left and right wheels l=2.5772 -- l=distance between front and read wheels \xa0 -- Here we execute the regular thread code: res,err=xpcall(threadFunction,function(err) return debug.traceback(err) end) if not res then \xa0\xa0\xa0\xa0simAddStatusbarMessage('Lua runtime error: '..err) end \xa0 -- Put some clean-up code here:", 'tags': '', 'url': '四輪車外型設置.html'}, {'title': '翻譯Topic 1', 'text': '第1章成功的設計 \n 1.1\xa0 設計指南 \n \n 設計指南 \n \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0 助於擴大設計師過去的全部經驗以及他們現在的組織的建立流程。 \n \n 電子產品外殼（ EPE = 電子產品外殼） \n \n \xa0\xa0\xa0\xa0\xa0\xa0 \xa0 由內部和外部結構組成產品的要素。 \n \n EPE 設計師 \x9e \n \n \xa0理解並符合產品規格的能力。\x9e 能夠添加並幫助創建產品規格。\x9e 為產品提出的問題創建創造性的解決方案。 \n 1.2\xa0 定義整體團隊 \n 團隊可以是：\x9e \n ．小型或大型。\x9e \n ． 位於一個位置或分佈在全球。\x9e \n ． 資源有限或可以訪問幾乎無限的資源。\x9e \n ． 是否擁有最新工具。\x9e \n ． 出於各種原因而實現目標的動機。\x9e \n ． 經驗豐富。 \n \xa0 \xa0 \u3000整個工程包含著多個學科之間的設計融合。例如：軟件和硬體工程、機械工程（包括結構和熱學）、系統工程 … 。 \n \u3000\u3000因此，知道機械工程只是電子產品整體工程設計的一部分，並且許多決策是與其他學科合作而成的。這些都是為了強調機械設計不是“憑空”完成，而是作為團隊共同努力的結果。 \n 1.3\xa0 產品要求 \n \n 產品將為客戶帶來什麼成就。 \n 說明產品如何與客戶互動。 \n 產品各組件的描述。 \n 展示產品的最終外觀。 \n 產品將在運行中和放置的環境，包括：溫度、衝擊、跌落、振動、濕度…。 \n 產品需要通過測試達到所有標準。包括安全和法規標準，例如：安全性保險商實驗室（ UL ）、電動勢電磁干擾（ EMI ）…。 \n \n 1.3.1規範功能 \n \n 最少的輸入。 \n 完整規格。 \n 工作規範。 \n \n 1.3.2準時按計劃進行 \n 1.3.3交貨的預計成本 \n \n 修改完成項目所需的人力資源。 \n 完成的項目所需資源被修改。 \n 修訂產品的預期銷售成本。 \n \n 1.4 草繪與細節 \n \u3000\u3000 EPE 設計人員必須知道何時在以下兩種模式之間切換： \n \n 草繪或集思廣益： 快速思考產品如何設計，同時獲得他人的反饋更改選擇。規模並不是很重要，速度才是這裡的重點。 \n 詳圖： 在“詳細模式”下，可以準確計算出設計中的一些關鍵部分 \n \n 1.5 設計評論 \n \u3000\u3000正式的設計評審通常是按照項目時間表上的計劃進行。 \n \u3000\u3000非正式的設計評審是偶爾或自發進行的。就像設計師去辦公室並要求同事“看看”、在設計師認為足夠接近設計問題或已有經驗的少數人中召開簡短會議。 \n 1.6 溝通 \n \u3000\u3000 溝通是設計成功的必要條件。這句話本身是正確的，但值得進行更充分的討論。 \n 1.6.1溝通目的 \n \u3000\u3000交流的目的是傳達有關設計的信息。 \n 1.6.2溝通的價值 \n \u3000\u3000良好的溝通將使項目更加成功。 \n 1.6.3通信鏈中的連接 \n \u3000\u3000交流的目標之一是將信息提供給需要的人，團隊包括很多學科。 EPE 設計師應在團隊中涉及所有人員做出決定，這些人對於做出決定非常重要。 \n 1.7 工程經濟 \n \u3000\u3000不論工程經濟學的基本原理，就不可能完成設計。幾乎所有的工作中，“付出什麼代價”都是最重要的考慮因素。在許多產品設計中，它將成為此產品成功或失敗的主要原因之一。 \n 章節總結 \n \u3000\u3000介紹如何將設計視為“成功”，以及設計如何滿足產品要求。 \n \xa0 \n 參考文件 \n \n Thuesen HG, Fabrycky WJ, Thuesen GJ. Engineering Economy, 1971, Prentice-Hall \n \n', 'tags': '', 'url': '翻譯Topic 1.html'}, {'title': '更新python', 'text': '將可攜系統中的 python3.7.3 更新至 python3.8.2 版本 \n ．收尋\xa0 Python 官網。 ．點選Downloads下的 Windows ，並點選\xa0 Latest Python 3 Release - Python 3.8.2 。 ．找到\xa0 Windows x86-64 executable installer \xa0 並下載。 ．開始下載，必須將 \xa0 pip 選項 取消 ．建立新的start.bat \n start.bat: \n \n \n \n \n @echo off set Disk=y subst %Disk%: "data" %Disk%: set HomePath=%Disk%:\\home_mdecourse set HomeDrive=%Disk%:\\home_mdecourse set Home=%Disk%:\\home_mdecourse set USERPROFILE=%Disk%:\\home_mdecourse REM 將系統 Python 程式的 io 設為 utf-8 set PYTHONIOENCODING="utf-8" set PYTHONPATH=%Disk%:\\py38\\DLLs;%Disk%:\\py38\\Lib;%Disk%:\\py38\\Lib\\site-packages; set PYTHONHOME=%Disk%:\\py38 REM for flutter set java_home=%Disk%:\\java\\jdk8u222-b10 set ANDROID_SDK_home=%Disk%:\\home_mdecourse set GRADLE_USER_home=%Disk%:\\home_mdecourse set ANDROID_SDK_ROOT=%Disk%:\\android\\sdk set ANDROID_Home=%Disk%:\\android\\sdk\\tools REM for putty set GIT_HOME=%CDisk%:\\portablegit\\bin\\ set GIT_SSH=%Disk%:\\putty\\plink.exe set path_python=%Disk%:\\py38;%Disk%:\\py38\\Scripts; set path_msys2=%Disk%:\\msys64\\mingw64\\bin; REM coreutils is for compiling fossil scm set path_coreutils=%Disk%:\\coreutils-5.3.0\\bin;%Disk%:\\depends22_x64; set path_tcc=%Disk%:\\tcc; set path_cmake=%Disk%:\\cmake-3.10.1-win64-x64\\bin; set path_nodejs=%Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm; set path_git=%Disk%:\\portablegit\\bin; set path_xming=%Disk%:\\Xming; set path_latex=%Disk%:\\Pandoc;%Disk%:\\TinyTeX\\bin\\win32; set path_flutter=%Disk%:\\java\\jdk8u222-b10\\bin;%Disk%:\\flutter\\bin;%Disk%:\\Android\\sdk;%Disk%:\\Android\\sdk\\tools;%Disk%:\\Android\\sdk\\tools\\bin;%Disk%:\\Android\\sdk\\platform-tools;%Disk%:\\flutter\\bin\\cache\\dart-sdk\\bin;%Disk%:\\vscode; set path_putty=%Disk%:\\putty; path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;%path_flutter%;%path_putty%;%path_latex%;%path%; start /MIN cmd.exe start /MIN cmd.exe start /MIN cmd.exe start /MIN cmd.exe start /MIN %Disk%:\\wscite415\\wscite\\SciTE.exe start /MIN %Disk%:\\wscite415\\wscite\\SciTE.exe Exit \n \n \n \n ．執行指令，將python3.8.2版本缺少的模組下載下來。 \n \n \n \n \n \n \n 1 \n \n \n \n python get - pip.py \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 2 \n \n \n \n pip install flask bs4 lxml pelican markdown flask_cors leo \n \n \n \n \n \n \n \n \xa0 \n \n ．下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 \n ．下載SciTE系統\xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432。 \n ．下載PortableGit\xa0 64-bit Git for Windows Portable \xa0至\xa0portablegit下。 ．安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 \n \n', 'tags': '', 'url': '更新python.html'}, {'title': '40723206', 'text': '個人倉儲: https://github.com/s40723206/cd2020 \n 個人網址: https://s40723206.github.io/cd2020/content/index.html \n \n 將可攜系統python 3.7.3更新至python 3.8.2 \n 1.先去GOOGLE找 Python \n 2.下載 Windows x86-64 executable installer \xa0載完點並 不要勾選pip選項，接著按下next選取放置資料夾 \n 3.在隨身系統下新增放置資料夾cd2020，並在cd2020下新建資料夾data，data<py382< wscite432<portablegit \n 4.下載SciTE系統 \xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432 \n 5.在cd2020下建立新的start.bat及stop.bat \n start.bat: \n @echo off\nset Disk=y\nsubst %Disk%: "data"\n  \n%Disk%:\n  \nset HomePath=%Disk%:\\home_mdecourse\nset HomeDrive=%Disk%:\\home_mdecourse\nset Home=%Disk%:\\home_mdecourse\nset USERPROFILE=%Disk%:\\home_mdecourse\n  \nREM 將系統 Python 程式的 io 設為 utf-8\nset PYTHONIOENCODING="utf-8"\n  \nset PYTHONPATH=%Disk%:\\py373\\DLLs;%Disk%:\\py373\\Lib;%Disk%:\\py373\\Lib\\site-packages;\nset PYTHONHOME=%Disk%:\\py373\n  \nset GIT_HOME=%Disk%:\\portablegit\\bin\\\nset GIT_SSH=%Disk%:\\putty\\plink.exe\n  \nset path_python=%Disk%:\\py373;%Disk%:\\py373\\Scripts;\nset path_msys2=%Disk%:\\msys64\\mingw64\\bin;\nREM coreutils is for compiling fossil scm\nset path_coreutils=%Disk%:\\coreutils-5.3.0\\bin;%Disk%:\\depends22_x64;\nset path_tcc=%Disk%:\\tcc;\nset path_cmake=%Disk%:\\cmake-3.10.1-win64-x64\\bin;\nset path_nodejs=Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm;\nset path_git=%Disk%:\\portablegit\\bin;\nset path_xming=%Disk%:\\Xming;\nset path_latex=%%Disk%:\\Pandoc;%Disk%:\\TinyTeX\\bin\\win32;\n  \npath=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;\n  \nstart /MIN %Disk%:\\wscite415\\wscite\\SciTE.exe\nstart /MIN %Disk%:\\wscite415\\wscite\\SciTE.exe\n  \nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\n  \n  \nExit \n stop.bat: \n @echo off\nset Disk=y\npath=%PATH%;\n   \ntaskkill /IM python.exe /F\ntaskkill /IM pythonw.exe /F\ntaskkill /IM scite.exe /F\n   \nREM 終止虛擬硬碟與目錄的對應\nsubst %Disk%: /D\nREM 關閉 cmd 指令視窗\ntaskkill /IM cmd.exe /F\n   \nEXIT \n 8.下 載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data 9.下載 PortableGit\xa0 64-bit Git for Windows Portable \xa0至 portablegit 10 .裝入 pip ，另存新檔到data 11.測試 將python3.8.2版本，將缺少的模組下載回來 \n python get-pip.py \n pip install flask bs4 lxml pelican markdown flask_cors leo \n \n', 'tags': '', 'url': '40723206.html'}, {'title': '40723222', 'text': '', 'tags': '', 'url': '40723222.html'}, {'title': '40723244', 'text': '個人倉儲: https://github.com/s40723244/cd2020 \n 個人網站: https://s40723244.github.io/cd2020/content/index.html \n', 'tags': '', 'url': '40723244.html'}, {'title': 'python382', 'text': '更新python3.8.2 \n 到\xa0 https://www.python.org/downloads/release/python-382/ \n 下載python3.8.2進行安裝 \n \n 點選Modify \n \n PIP不要勾選(最底下可勾可不勾) \n \n 設定好安裝位置後進行安裝 \n \n 將剛剛安裝的資料複製到隨身系統上 \n \n 更改啟動檔的設定 將PY373改為PY383(自己設定的名稱) \n \n 接著安裝 pip 和 cmsimde 所需模組 \n \n \n', 'tags': '', 'url': 'python382.html'}, {'title': 'assignment', 'text': '所有翻譯及PDF內容均在倉儲的downloads \n https://github.com/s40723244/cd2020/tree/master/downloads \n', 'tags': '', 'url': 'assignment.html'}, {'title': 'assignment1', 'text': 'assignments1: https://github.com/s40723244/cd2020/blob/master/downloads/Assignment%201.pdf \n \n \n \n \n', 'tags': '', 'url': 'assignment1.html'}, {'title': 'assignment2', 'text': 'assignments2: https://github.com/s40723244/cd2020/blob/master/downloads/Assignment%202.pdf \n \n \n \n \n \n \n', 'tags': '', 'url': 'assignment2.html'}, {'title': '每週開會影片', 'text': 'WEEK2 \n \n WEEK6 \n \n WEEK10 \n \n WEEK11 \n \n \n \n \n', 'tags': '', 'url': '每週開會影片.html'}, {'title': '40723203', 'text': '', 'tags': '', 'url': '40723203.html'}, {'title': '40723207', 'text': '', 'tags': '', 'url': '40723207.html'}, {'title': '40723250', 'text': '個人網站 : cd2020 s40723250 \n 個人倉儲: https://github.com/s40723250/cd2020 \n week10 \n 進入 : http://mde.tw/cd2020pj1/content/CMS.html \n \n 登錄到個人的@gm帳戶 \n 鏈接到 https://console.developers.google.com \n 接受許可並創建Google API項目 \n 啟用Google +域API \n 在Google + Domain API憑據下，按CONFIGURE CONSENT SCREEN按鈕 \n 選擇內部或外部用戶類型並添加新的應用程序名稱 \n 在“ API和服務”下，進入“憑據”頁面 \n 為Web應用程序 創建“ \xa0 OAuth 2.0客戶端ID”類型的憑據 \n 授權的JavaScript來源： https：// localhost：8443 \n 授權的重定向URI： https：// localhost：8443 / login / google / \n 開啟leo，打開cd2020pj1.leo，在@path ./@edit coonfig.py找到第7行key file =...將上下兩個都改成自己剛剛儲存憑證密碼的檔案名稱 \n 在黑窗中輸入: pip install authomatic\xa0 (需先更新為P3.8.2) \n 進入cd2020pj1打python wsgi.py就能開啟近端 \n \n', 'tags': '', 'url': '40723250.html'}, {'title': '40623251', 'text': '', 'tags': '', 'url': '40623251.html'}]};